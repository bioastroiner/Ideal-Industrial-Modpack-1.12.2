# Configuration file

general {
    # Display chunk border while holding Core Samples, default=true
    B:sample_displayBorder=true

    extraction {
        # Number of ticks between checking for pipes below pumpjack if required, default=100 (5 secs)
        I:pipe_check_ticks=100

        # The Flux the Pumpjack requires each tick to pump, default=1024
        I:pumpjack_consumption=1024

        # The amount of mB of oil a Pumpjack extracts per tick, default=15
        I:pumpjack_speed=15

        # Require a pumpjack to have pipes built down to Bedrock, default=false
        B:req_pipes=false

        # The chance that a chunk contains a fluid reservoir, default=0.5
        D:reservoir_chance=0.5

        # List of reservoir types. Format: name, fluid_name, min_mb_fluid, max_mb_fluid, mb_per_tick_replenish, weight, [dim_blacklist], [dim_whitelist], [biome_dict_blacklist], [biome_dict_whitelist]
        S:reservoirs <
            aquifer, water, 5000000, 10000000, 6, 50, [], [0], [], []
            light_oil, oil_light, 2500000, 15000000, 6, 40, [1], [], [], []
            medium_oil, oil_medium, 2500000, 15000000, 6, 10, [1], [], [], []
            heavy_oil, oil_heavy, 2500000, 15000000, 6, 50, [1], [], [], []
            natural_gas, natural_gas, 2500000, 15000000, 6, 30, [1], [], [], []
         >
    }

    refining {
        # A modifier to apply to the energy costs of every Distillation Tower recipe, default=1
        D:distillationTower_energyModifier=1.0

        # A modifier to apply to the time of every Distillation recipe. Can't be lower than 1, default=1
        D:distillationTower_timeModifier=1.0

        # Distillation Tower byproducts. Need one for each recipe. Multiple solid outputs for a single recipe can be separated by semicolons. Format: item_name, stack_size, metadata, percent_chance
        S:towerByproduct <
            immersivepetroleum:material, 1, 0, 7
            immersivepetroleum:material, 1, 0, 0
            immersivepetroleum:material, 1, 0, 0
         >

        # Distillation Tower recipes. Format: power_cost, input_name, input_mb -> output1_name, output1_mb, output2_name, output2_mb
        S:towerRecipes <
            7680, oil_light, 150 -> sulfuric_heavy_fuel, 10, sulfuric_light_fuel, 20, sulfuric_naphtha, 30, sulfuric_gas, 240
            7680, oil_medium, 100 -> sulfuric_heavy_fuel, 15, sulfuric_light_fuel, 50, sulfuric_naphtha, 20, sulfuric_gas, 60
            23040, oil_heavy, 150 -> sulfuric_heavy_fuel, 250, sulfuric_light_fuel, 45, sulfuric_naphtha, 15, sulfuric_gas, 600
         >
    }

    generation {
        # List of Portable Generator fuels. Format: fluid_name, mb_used_per_tick, flux_produced_per_tick
        S:fuels <
            gasoline, 5, 256
         >
    }

    misc {
        # Automatically unlock IP recipes for new players, default=true
        B:autounlock_recipes=true

        # List of Motorboat fuels. Format: fluid_name, mb_used_per_tick
        S:boat_fuels <
            gasoline, 1
         >
    }

    tools {
    }

}


